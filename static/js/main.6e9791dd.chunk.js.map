{"version":3,"sources":["components/MyDocument.js","components/Header.js","components/Experience.js","components/Footer.js","components/Education.js","components/Personal.js","components/Form.js","App.js","index.js"],"names":["styles","StyleSheet","create","page","flexDirection","header","padding","backgroundColor","height","alignItems","color","fontSize","Firstname","marginLeft","name","paddingRight","mainContent","sideBar","width","titleText","fontWeight","borderBottom","borderBottomColor","sideBarInfo","paddingTop","sideBarInfoText","experienceSection","describeSection","lineHeight","MyDocument","cvInfo","size","style","personal","firstName","Lastname","lastName","phone","email","address","city","state","zip","describe","pathVariants","hidden","pathLength","visible","transition","duration","ease","svgVariants","rotate","Header","className","motion","svg","xmlns","fill","viewBox","stroke","variants","initial","animate","path","strokeLinecap","strokeLinejoin","strokeWidth","d","Experience","id","handleAdd","deleteJob","updateJobs","useState","position","setPosition","company","setCompany","setCity","fromDate","setFromDate","toDate","setToDate","from","to","experience","setExperience","useEffect","experienceCopy","Object","assign","updateExperience","htmlFor","type","placeholder","value","onChange","e","target","required","onClick","Footer","rel","href","focusable","role","Education","increaseEducation","deleteEducation","updateEducationArr","university","setUniversity","degree","setDegree","major","setMajor","education","setEducation","educationCopy","updateEducation","Personal","memo","updatePersonalInfo","setFirstName","setLastName","setEmail","setPhone","setAddress","setZip","setDescribe","setState","personalObj","setPersonalObj","objCopy","updatePersonalObj","cols","rows","Form","updateCVInfo","updatePDF","description","setPersonal","uuidv4","jobs","setJobs","educations","setEducations","increaseJobs","newJobs","slice","push","deleteJobs","filter","job","obj","jobsCopy","jobsExist","forEach","neweducations","newEdu","edu","newEducations","eduExist","maxHeight","map","preventDefault","App","myDocument","usePDF","update","setCVInfo","cvInfoCopy","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e9791dd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Page, Text, View, Document, StyleSheet } from \"@react-pdf/renderer\";\r\n\r\n// Create styles\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n        flexDirection: \"column\",\r\n    },\r\n    header: {\r\n        padding: 20,\r\n        backgroundColor: \"#003A75\",\r\n        height: \"80px\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"row\",\r\n        color: \"#fff\",\r\n        fontSize: \"30px\",\r\n    },\r\n    Firstname: {\r\n        marginLeft: \"10px\",\r\n    },\r\n    name: {\r\n        paddingRight: \"5px\",\r\n    },\r\n\r\n    mainContent: {\r\n        flexDirection: \"row\",\r\n    },\r\n    sideBar: {\r\n        padding: \"20px 15px\",\r\n        width: \"150px\",\r\n        backgroundColor: \"#F4F4F4\",\r\n        height: \"760px\",\r\n    },\r\n    titleText: {\r\n        fontSize: \"16px\",\r\n        color: \"#003A75\",\r\n        fontWeight: \"bolder\",\r\n        borderBottom: \"1px\",\r\n        borderBottomColor: \"#A9A9A9\",\r\n    },\r\n    sideBarInfo: {\r\n        paddingTop: \"15px\",\r\n        fontSize: \"12px\",\r\n    },\r\n    sideBarInfoText: {\r\n        fontSize: \"11px\",\r\n        paddingTop: \"5px\",\r\n        fontWeight: \"light\",\r\n    },\r\n    experienceSection: {\r\n        width:\"450px\",\r\n    },\r\n    describeSection: {\r\n        fontSize: \"12px\",\r\n        padding: \"20px 15px\",\r\n        lineHeight: \"2px\",\r\n    }\r\n});\r\n\r\n// Create Document Component\r\nconst MyDocument = ({ cvInfo }) => (\r\n    <Document>\r\n        <Page size=\"A4\" style={styles.page}>\r\n            {/* Header */}\r\n            <View style={styles.header}>\r\n                <View style={styles.Firstname}>\r\n                    {/* {cvInfo && <Text>{cvInfo.personal.firstName}</Text>} */}\r\n                    {cvInfo.personal.firstName ? (\r\n                        <Text>{cvInfo.personal.firstName} </Text>\r\n                    ) : (\r\n                        <Text>First Name</Text>\r\n                    )}\r\n                </View>\r\n                <View style={styles.Lastname}>\r\n                    {/* {cvInfo && <Text>{cvInfo.personal.firstName}</Text>} */}\r\n                    {cvInfo.personal.lastName ? (\r\n                        <Text>{` ${cvInfo.personal.lastName}`} </Text>\r\n                    ) : (\r\n                        <Text>Last Name</Text>\r\n                    )}\r\n                </View>\r\n            </View>\r\n\r\n            {/* main content */}\r\n            <View style={styles.mainContent}>\r\n                {/* sidebar */}\r\n                <View style={styles.sideBar}>\r\n                    <Text style={styles.titleText}>Personal Info</Text>\r\n                    <Text style={styles.sideBarInfo}>Phone:</Text>\r\n                    <Text style={styles.sideBarInfoText}>\r\n                        {cvInfo.personal.phone ? (\r\n                            <Text>{` ${cvInfo.personal.phone}`} </Text>\r\n                        ) : (\r\n                            <Text>xxx-xxx-xxxx</Text>\r\n                        )}\r\n                    </Text>\r\n\r\n                    <Text style={styles.sideBarInfo}>Email:</Text>\r\n                    <Text style={styles.sideBarInfoText}>\r\n                        {cvInfo.personal.email ? (\r\n                            <Text>{` ${cvInfo.personal.email}`} </Text>\r\n                        ) : (\r\n                            <Text>email@email.com</Text>\r\n                        )}\r\n                    </Text>\r\n\r\n                    <Text style={styles.sideBarInfo}>Address:</Text>\r\n                    <Text style={styles.sideBarInfoText}>\r\n                        {cvInfo.personal.address ? (\r\n                            <Text>{` ${cvInfo.personal.address}`} </Text>\r\n                        ) : (\r\n                            <Text>123 Maple str.</Text>\r\n                        )}\r\n                    </Text>\r\n\r\n                    <Text style={styles.sideBarInfoText}>\r\n                        {cvInfo.personal.city ? (\r\n                            <Text>{` ${cvInfo.personal.city}`} </Text>\r\n                        ) : (\r\n                            <Text>city</Text>\r\n                        )}\r\n                        {cvInfo.personal.state ? (\r\n                            <Text>{` ${cvInfo.personal.state}`} </Text>\r\n                        ) : (\r\n                            <Text>state</Text>\r\n                        )}\r\n                    </Text>\r\n\r\n                    <Text style={styles.sideBarInfoText}>\r\n                        {cvInfo.personal.zip ? (\r\n                            <Text>{` ${cvInfo.personal.zip}`} </Text>\r\n                        ) : (\r\n                            <Text>xxxxx</Text>\r\n                        )}\r\n                    </Text>\r\n                </View>\r\n\r\n                {/* work and education */}\r\n                <View style={styles.experienceSection}>\r\n                    <Text style={styles.describeSection}>\r\n                        {cvInfo.personal.describe ? (\r\n                            <Text>{` ${cvInfo.personal.describe}`} </Text>\r\n                        ) : (\r\n                            <Text>\r\n                                Lorem ipsum, dolor sit amet consectetur\r\n                                adipisicing elit. Assumenda temporibus sunt\r\n                                neque rem. Harum nihil maiores, pariatur\r\n                                repellat quae esse, id asperiores, nesciunt\r\n                                mollitia cum sapiente explicabo libero\r\n                                repellendus neque!\r\n                            </Text>\r\n                        )}\r\n                    </Text>\r\n                </View>\r\n            </View>\r\n        </Page>\r\n    </Document>\r\n);\r\n\r\nexport default MyDocument;\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst pathVariants = {\r\n    hidden: {\r\n        pathLength: 0,\r\n    },\r\n    visible: {\r\n        pathLength: 1,\r\n        transition: { duration: 2, ease: \"easeInOut\" },\r\n    },\r\n};\r\n\r\nconst svgVariants = {\r\n    hidden: { rotate: 45 },\r\n    visible: {\r\n        rotate: 0,\r\n        transition: { duration: 1 },\r\n    },\r\n};\r\n\r\nfunction Header() {\r\n    return (\r\n        <h1 className=\"text-4xl font-semibold px-6 pt-6 text-gray-100 flex space-x-2 mb-2 items-center h-14\">\r\n            <motion.svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"h-9 w-9 mt-1\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n                variants={svgVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n            >\r\n                <motion.path\r\n                    variants={pathVariants}\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={1}\r\n                    d=\"M4 5a1 1 0 011-1h14a1 1 0 011 1v2a1 1 0 01-1 1H5a1 1 0 01-1-1V5zM4 13a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H5a1 1 0 01-1-1v-6zM16 13a1 1 0 011-1h2a1 1 0 011 1v6a1 1 0 01-1 1h-2a1 1 0 01-1-1v-6z\"\r\n                />\r\n            </motion.svg>\r\n            <span>CVENETOR</span>\r\n        </h1>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst Experience = ({ id, handleAdd, deleteJob, updateJobs }) => {\r\n    let [position, setPosition] = useState(\"\");\r\n    let [company, setCompany] = useState(\"\");\r\n    let [city, setCity] = useState(\"\");\r\n    let [fromDate, setFromDate] = useState(\"\");\r\n    let [toDate, setToDate] = useState(\"\");\r\n\r\n    let [experience, setExperience] = useState({\r\n        id: id,\r\n        position: \"\",\r\n        company: \"\",\r\n        city: \"\",\r\n        from: \"\",\r\n        to: \"\",\r\n    });\r\n\r\n    const updateExperience = () => {\r\n        let experienceCopy = Object.assign({}, experience);\r\n        experienceCopy.position = position;\r\n        experienceCopy.company = company;\r\n        experienceCopy.city = city;\r\n        experienceCopy.from = fromDate;\r\n        experienceCopy.to = toDate;\r\n        setExperience(experienceCopy);\r\n    };\r\n\r\n    useEffect(() => {\r\n        updateExperience();\r\n    }, [position,company,city,fromDate,toDate])\r\n\r\n    useEffect(() => {\r\n        updateJobs(experience);\r\n    }, [experience])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"flex flex-col space-y-1\">\r\n                <label\r\n                    htmlFor=\"position\"\r\n                    className=\"text-sm text-gray-100 font-sans\"\r\n                >\r\n                    Position:\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"position\"\r\n                    placeholder=\"Position\"\r\n                    className=\"rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                    value={position}\r\n                    onChange={(e) => {\r\n                        setPosition(e.target.value);\r\n                        // updateExperience();\r\n                        // updateJobs(experience);\r\n                    }}\r\n                    required\r\n                />\r\n            </div>\r\n\r\n            <div className=\"flex flex-col space-y-1 md:flex-row md:space-x-3 md:space-y-0 justify-center\">\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"company\" className=\"text-sm text-gray-100\">\r\n                        Company:\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"company\"\r\n                        placeholder=\"Company\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                        value={company}\r\n                        onChange={(e) => {\r\n                            setCompany(e.target.value);\r\n                            // updateExperience();\r\n                            // updateJobs(experience);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"city\" className=\"text-sm text-gray-100\">\r\n                        City:\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"City\"\r\n                        placeholder=\"city\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                        value={city}\r\n                        onChange={(e) => {\r\n                            setCity(e.target.value);\r\n                            // updateExperience();\r\n                            // updateJobs(experience);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex flex-col space-y-1 md:flex-row md:space-x-3 md:space-y-0 justify-center\">\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"from\" className=\"text-sm text-gray-100\">\r\n                        From:\r\n                    </label>\r\n                    <input\r\n                        type=\"date\"\r\n                        id=\"from\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1 text-xs\"\r\n                        value={fromDate}\r\n                        onChange={(e) => {\r\n                            setFromDate(e.target.value);\r\n                            // updateExperience();\r\n                            // updateJobs(experience);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"To\" className=\"text-sm text-gray-100\">\r\n                        To:\r\n                    </label>\r\n                    <input\r\n                        type=\"date\"\r\n                        id=\"to\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-300 mt-1 text-xs \"\r\n                        value={toDate}\r\n                        onChange={(e) => {\r\n                            setToDate(e.target.value);\r\n                            // updateExperience();\r\n                            // updateJobs(experience);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"flex flex-col\">\r\n                <button\r\n                    className=\"w-full bg-gray-300 mt-6 h-8 rounded-md text-lg font-semibold flex items-center justify-center space-x-2 hover:bg-gray-100\"\r\n                    onClick={() => handleAdd()}\r\n                >\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"h-4 w-4\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                    >\r\n                        <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            strokeWidth={2}\r\n                            d=\"M12 4v16m8-8H4\"\r\n                        />\r\n                    </svg>\r\n                    <span>Add</span>\r\n                </button>\r\n                <button\r\n                    className=\"w-full bg-black mt-4 h-8 text-gray-100 rounded-md text-lg font-semibold flex items-center justify-center  mb-3 space-x-2 hover:bg-gray-900\"\r\n                    onClick={() => deleteJob(id)}\r\n                >\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"h-4 w-4\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                    >\r\n                        <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            strokeWidth={2}\r\n                            d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\r\n                        />\r\n                    </svg>\r\n                    <span>Delete</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Experience","import React from \"react\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n            <footer className=\"flex justify-center space-x-2 mt-5 text-sm text-gray-200 pt-1 pb-1\">\r\n                <a  target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/a1ali\" className=\"flex items-center space-x-1\">\r\n                    <svg\r\n                        aria-hidden=\"true\"\r\n                        focusable=\"false\"\r\n                        data-prefix=\"fab\"\r\n                        data-icon=\"github\"\r\n                        className=\"w-6 h-6\"\r\n                        role=\"img\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        viewBox=\"0 0 496 512\"\r\n                    >\r\n                        <path\r\n                            fill=\"currentColor\"\r\n                            d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\"\r\n                        ></path>\r\n                    </svg>\r\n                    <span className=\"text-md \">a1ali</span>\r\n                </a>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst Education = ({ id, increaseEducation, deleteEducation, updateEducationArr }) => {\r\n    let [university, setUniversity] = useState(\"\");\r\n    let [degree, setDegree] = useState(\"\");\r\n    let [city, setCity] = useState(\"\");\r\n    let [fromDate, setFromDate] = useState(\"\");\r\n    let [toDate, setToDate] = useState(\"\");\r\n    let [major, setMajor] = useState(\"\");\r\n\r\n    let [education, setEducation] = useState({\r\n        id: id,\r\n        university: \"\",\r\n        degree: \"\",\r\n        city: \"\",\r\n        from: \"\",\r\n        to: \"\",\r\n        major: \"\",\r\n    });\r\n\r\n    const updateEducation = () => {\r\n        let educationCopy = Object.assign({}, education);\r\n        educationCopy.university = university;\r\n        educationCopy.degree = degree;\r\n        educationCopy.city = city;\r\n        educationCopy.from = fromDate;\r\n        educationCopy.to = toDate;\r\n        educationCopy.major = major;\r\n        setEducation(educationCopy);\r\n    };\r\n\r\n    useEffect(() => {\r\n        updateEducation();\r\n    }, [university,degree,city,fromDate,toDate,major])\r\n\r\n    useEffect(() => {\r\n        updateEducationArr(education);\r\n    }, [education])\r\n\r\n    return (\r\n        <div >\r\n            <div className=\"flex flex-col space-y-1\">\r\n                <label\r\n                    htmlFor=\"university\"\r\n                    className=\"text-sm text-gray-100 font-sans\"\r\n                >\r\n                    University:\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"university\"\r\n                    placeholder=\"University\"\r\n                    className=\"rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                    value={university}\r\n                    onChange={(e) => {\r\n                        setUniversity(e.target.value);\r\n                        // updateEducation();\r\n                        // updateEducationArr(education);\r\n                    }}\r\n                    required\r\n                />\r\n            </div>\r\n\r\n            <div className=\"flex flex-col space-y-1 md:flex-row md:space-x-3 md:space-y-0 justify-center\">\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"degree\" className=\"text-sm text-gray-100\">\r\n                        Degree:\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"degree\"\r\n                        placeholder=\"Degree\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                        value={degree}\r\n                        onChange={(e) => {\r\n                            setDegree(e.target.value);\r\n                            // updateEducation();\r\n                            // updateEducationArr(education);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"major\" className=\"text-sm text-gray-100\">\r\n                    Major:\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"major\"\r\n                        placeholder=\"Major\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                        value={major}\r\n                        onChange={(e) => {\r\n                            setMajor(e.target.value);\r\n                            // updateEducation();\r\n                            // updateEducationArr(education);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"w-full\">\r\n                    <label htmlFor=\"city\" className=\"text-sm text-gray-100\">\r\n                        City:\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"City\"\r\n                        placeholder=\"city\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                        value={city}\r\n                        onChange={(e) => {\r\n                            setCity(e.target.value);\r\n                            // updateEducation();\r\n                            // updateEducationArr(education);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n            <div className=\"flex flex-col space-y-1 md:flex-row md:space-x-3 md:space-y-0 justify-center\">\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"from\" className=\"text-sm text-gray-100\">\r\n                        From:\r\n                    </label>\r\n                    <input\r\n                        type=\"date\"\r\n                        id=\"from\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1 text-xs\"\r\n                        value={fromDate}\r\n                        onChange={(e) => {\r\n                            setFromDate(e.target.value);\r\n                            // updateEducation();\r\n                            // updateEducationArr(education);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"To\" className=\"text-sm text-gray-100\">\r\n                        To:\r\n                    </label>\r\n                    <input\r\n                        type=\"date\"\r\n                        id=\"to\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-300 mt-1 text-xs \"\r\n                        value={toDate}\r\n                        onChange={(e) => {\r\n                            setToDate(e.target.value);\r\n                            // updateEducation();\r\n                            // updateEducationArr(education);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"flex flex-col\">\r\n                <button\r\n                    className=\"w-full bg-gray-300 mt-6 h-8 rounded-md text-lg font-semibold flex items-center justify-center space-x-2 hover:bg-gray-100\"\r\n                    onClick={() => increaseEducation()}\r\n                >\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"h-4 w-4\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                    >\r\n                        <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            strokeWidth={2}\r\n                            d=\"M12 4v16m8-8H4\"\r\n                        />\r\n                    </svg>\r\n                    <span>Add</span>\r\n                </button>\r\n                <button\r\n                    className=\"w-full bg-black mt-4 h-8 text-gray-100 rounded-md text-lg font-semibold flex items-center justify-center space-x-2 hover:bg-gray-900 mb-3\"\r\n                    onClick={() => deleteEducation(id)}\r\n                >\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"h-4 w-4\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                    >\r\n                        <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            strokeWidth={2}\r\n                            d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\r\n                        />\r\n                    </svg>\r\n                    <span>Delete</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Education","import React, { useState, useEffect, memo } from \"react\";\r\n\r\nconst  Personal = memo(({updatePersonalInfo}) => {\r\n    let [firstName, setFirstName] = useState(\"\");\r\n    let [lastName, setLastName] = useState(\"\");\r\n    let [email, setEmail] = useState(\"\");\r\n    let [phone, setPhone] = useState(\"\");\r\n    let [address, setAddress] = useState(\"\");\r\n    let [city, setCity] = useState(\"\");\r\n    let [zip, setZip] = useState(\"\");\r\n    let [describe, setDescribe] = useState(\"\");\r\n    let [state, setState] = useState(\"\");\r\n\r\n    let [personalObj, setPersonalObj] = useState({});\r\n\r\n    const updatePersonalObj = () => {\r\n        let objCopy = Object.assign({}, personalObj);\r\n        objCopy.firstName = firstName\r\n        objCopy.lastName = lastName\r\n        objCopy.email = email\r\n        objCopy.phone = phone\r\n        objCopy.address = address\r\n        objCopy.city = city\r\n        objCopy.zip = zip\r\n        objCopy.describe = describe\r\n        objCopy.state = state\r\n        setPersonalObj(objCopy)\r\n        \r\n    }\r\n    // [firstName,lastName,email,phone,address,city,zip,describe,state, personalObj]\r\n\r\n    useEffect(() => {\r\n        // updatePersonalObj()\r\n        updatePersonalInfo(personalObj)\r\n    }, [personalObj])       \r\n    \r\n    useEffect(() => {\r\n        updatePersonalObj()\r\n    }, [firstName,lastName,email,phone,address,city,zip,describe,state])\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-lg font-semibold text-gray-100 mb-2\">\r\n                Personal Information\r\n            </h1>\r\n            <div className=\"flex flex-col md:flex-row space-y-1 md:space-x-3 md:space-y-0 w-full justify-center  \">\r\n                <div className=\"w-full\">\r\n                    <label\r\n                        htmlFor=\"firstName\"\r\n                        className=\"text-sm text-gray-100\"\r\n                    >\r\n                        First name:\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"firstName\"\r\n                        placeholder=\"First name\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1 justify-center\"\r\n                        //value={firstName}\r\n                        onChange={(e) => {\r\n                            setFirstName(e.target.value);\r\n                            \r\n                            // updatePersonalInfo(personalObj)\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"w-full\">\r\n                    <label\r\n                        htmlFor=\"lastName\"\r\n                        className=\"text-sm text-gray-100 font-sans\"\r\n                    >\r\n                        Last name:\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"lastName\"\r\n                        placeholder=\"Last name\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                        value={lastName}\r\n                        onChange={(e) => {\r\n                            setLastName(e.target.value);\r\n                            // updatePersonalObj()\r\n                            // updatePersonalInfo(personalObj)\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex flex-col space-y-1 md:flex-row md:space-x-3 md:space-y-0 justify-center\">\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"email\" className=\"text-sm text-gray-100\">\r\n                        Email:\r\n                    </label>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        placeholder=\"Email\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                        value={email}\r\n                        onChange={(e) => {\r\n                            setEmail(e.target.value);\r\n                            // updatePersonalObj()\r\n                            // updatePersonalInfo(personalObj)\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"phone\" className=\"text-sm text-gray-100\">\r\n                        Phone number:\r\n                    </label>\r\n                    <input\r\n                        type=\"tel\"\r\n                        id=\"email\"\r\n                        placeholder=\"xxx-xxx-xxxx\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                        value={phone}\r\n                        onChange={(e) => {\r\n                            setPhone(e.target.value);\r\n                            // updatePersonalObj()\r\n                            // updatePersonalInfo(personalObj)\r\n                        }}\r\n                        required\r\n\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex flex-col space-y-1\">\r\n                <label\r\n                    htmlFor=\"address\"\r\n                    className=\"text-sm text-gray-100 font-sans\"\r\n                >\r\n                    Address:\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"address\"\r\n                    placeholder=\"Address\"\r\n                    className=\"rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                    value={address}\r\n                    onChange={(e) => {\r\n                        setAddress(e.target.value);\r\n                        // updatePersonalObj()\r\n                        // updatePersonalInfo(personalObj)\r\n                    }}\r\n                    required\r\n                />\r\n            </div>\r\n\r\n            <div className=\"flex flex-col\">\r\n                <label\r\n                    htmlFor=\"city\"\r\n                    className=\"text-sm text-gray-100 font-sans\"\r\n                >\r\n                    City:\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"city\"\r\n                    placeholder=\"City\"\r\n                    className=\"rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                    value={city}\r\n                    onChange={(e) => {\r\n                        setCity(e.target.value);\r\n                        // updatePersonalObj()\r\n                        // updatePersonalInfo(personalObj)\r\n                    }}\r\n                    required\r\n                />\r\n            </div>\r\n\r\n            <div className=\"flex flex-col space-y-1 md:flex-row md:space-x-3 md:space-y-0 justify-center\">\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"state\" className=\"text-sm text-gray-100\">\r\n                        State:\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"state\"\r\n                        placeholder=\"State\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                        value={state}\r\n                        onChange={(e) => {\r\n                            setState(e.target.value);\r\n                            // updatePersonalObj()\r\n                            // updatePersonalInfo(personalObj)\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"zip\" className=\"text-sm text-gray-100\">\r\n                        Zip Code:\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"zip\"\r\n                        placeholder=\"zip code\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                        value={zip}\r\n                        onChange={(e) => {\r\n                            setZip(e.target.value);\r\n                            // updatePersonalObj()\r\n                            // updatePersonalInfo(personalObj)\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex flex-col mt-1\">\r\n                <label\r\n                    htmlFor=\"description\"\r\n                    className=\"text-sm text-gray-100 font-sans\"\r\n                >\r\n                    Describe your self:\r\n                </label>\r\n                <textarea\r\n                    type=\"text\"\r\n                    id=\"description\"\r\n                    placeholder=\"Description\"\r\n                    className=\"rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                    value={describe}\r\n                    onChange={(e) => {\r\n                        setDescribe(e.target.value);\r\n                        // updatePersonalObj()\r\n                        // updatePersonalInfo(personalObj)\r\n                    }}\r\n                    required\r\n                    cols=\"30\"\r\n                    rows=\"4\"\r\n                ></textarea>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Personal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Experience from \"./Experience\";\r\nimport Footer from \"./Footer\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Education from \"./Education\";\r\nimport Personal from \"./Personal\";\r\n\r\nfunction Form({updateCVInfo, updatePDF}) {\r\n    \r\n\r\n\r\n    let [personal, setPersonal] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        zip: \"\",\r\n        description: \"\",\r\n    });\r\n\r\n    let [jobs, setJobs] = useState([\r\n        { id: uuidv4(), position: \"\", company: \"\", city: \"\", from: \"\", to: \"\" },\r\n    ]);\r\n\r\n    let [educations, setEducations] = useState([\r\n        {\r\n            id: uuidv4(),\r\n            university: \"\",\r\n            degree: \"\",\r\n            city: \"\",\r\n            from: \"\",\r\n            to: \"\",\r\n            major: \"\",\r\n        },\r\n    ]);\r\n    // let [experience, setExperience] = useState({});\r\n\r\n    const updatePersonalInfo = (obj) => {\r\n        let personalCopy = Object.assign({}, personal);\r\n        personalCopy = obj;\r\n        setPersonal(personalCopy);\r\n        // updateCVInfo(personal, jobs, educations)\r\n    };\r\n\r\n    const increaseJobs = () => {\r\n        let newJobs = jobs.slice();\r\n        newJobs.push({ id: uuidv4() });\r\n        setJobs(newJobs);\r\n        // updateCVInfo(personal, jobs, educations)\r\n    };\r\n\r\n    const deleteJobs = (id) => {\r\n        let newJobs = jobs.filter((job) => job.id !== id);\r\n        setJobs(newJobs);\r\n        // updateCVInfo(personal, jobs, educations)\r\n    };\r\n\r\n    const updateJobs = (obj) => {\r\n        let jobsCopy = jobs.slice();\r\n        let jobsExist = false;\r\n        jobsCopy.forEach((job) => {\r\n            if (job.id === obj.id) {\r\n                jobsExist = true;\r\n                job.position = obj.position;\r\n                job.company = obj.company;\r\n                job.city = obj.city;\r\n                job.from = obj.from;\r\n                job.to = obj.to;\r\n                //create a reference free copy of the object\r\n            }\r\n        });\r\n        if (!jobsExist) {\r\n            jobsCopy.push(obj);\r\n        }\r\n        setJobs(jobsCopy);\r\n        // updateCVInfo(personal, jobs, educations)\r\n    };\r\n\r\n    const increaseEducation = () => {\r\n        let neweducations = educations.slice();\r\n        neweducations.push({ id: uuidv4() });\r\n        setEducations(neweducations);\r\n        // updateCVInfo(personal, jobs, educations)\r\n    };\r\n\r\n    const deleteEducation = (id) => {\r\n        let newEdu = educations.filter((edu) => edu.id !== id);\r\n        setEducations(newEdu);\r\n        // updateCVInfo(personal, jobs, educations)\r\n    };\r\n\r\n    const updateEducation = (obj) => {\r\n        let newEducations = educations.slice();\r\n        let eduExist = false;\r\n        newEducations.forEach((edu) => {\r\n            if (edu.id === obj.id) {\r\n                eduExist = true;\r\n                edu.university = obj.university;\r\n                edu.degree = obj.degree;\r\n                edu.city = obj.city;\r\n                edu.from = obj.from;\r\n                edu.to = obj.to;\r\n                edu.major = obj.major;\r\n                //create a reference free copy of the object\r\n            }\r\n        });\r\n        if (!eduExist) {\r\n            newEducations.push(obj);\r\n        }\r\n        setEducations(newEducations);\r\n        // updateCVInfo(personal, jobs, educations)\r\n    };\r\n\r\n    useEffect(() => {\r\n        updateCVInfo(personal, jobs, educations)\r\n    }, [personal,educations,jobs])\r\n\r\n    return (\r\n        <div className=\"w-full md:w-1/2 lg:w-1/3 bg-gray-600 border-r-2 border-gray-800 flex flex-col\">\r\n            <Header></Header>\r\n            <form\r\n                className=\"flex flex-col w-full  p-6 pt-16 space-y-2 overflow-y-auto scrollbar-thin scrollbar-thumb-rounded-md scrollbar-thumb-gray-500 scrollbar-track-gray-400\"\r\n                style={{ maxHeight: `calc(100vh - 70px)` }}\r\n            >\r\n                <section className=\"mb-4\">\r\n                    <Personal\r\n                        updatePersonalInfo={updatePersonalInfo}\r\n                    ></Personal>\r\n                </section>\r\n\r\n                <section className=\"border-t border-gray-400\">\r\n                    <h1 className=\"text-lg font-semibold text-gray-100 mb-2 mt-4\">\r\n                        Work Experience\r\n                    </h1>\r\n\r\n                    {jobs.map((job) => (\r\n                        <Experience\r\n                            id={job.id}\r\n                            handleAdd={increaseJobs}\r\n                            deleteJob={deleteJobs}\r\n                            updateJobs={updateJobs}\r\n                        ></Experience>\r\n                    ))}\r\n                </section>\r\n\r\n                <section className=\"border-t border-gray-400\">\r\n                    <h1 className=\"text-lg font-semibold text-gray-100 mb-2 mt-4\">\r\n                        Education\r\n                    </h1>\r\n                    {educations.map((edu) => (\r\n                        <Education\r\n                            id={edu.id}\r\n                            increaseEducation={increaseEducation}\r\n                            deleteEducation={deleteEducation}\r\n                            updateEducationArr={updateEducation}\r\n                        ></Education>\r\n                    ))}\r\n                </section>\r\n\r\n                <button onClick={(e) => {\r\n                    e.preventDefault()\r\n                    updatePDF()\r\n                }}>Update PDF</button>\r\n\r\n                <Footer />\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n","import MyDocument from \"./components/MyDocument\";\nimport ReactPDF, { PDFViewer, usePDF } from \"@react-pdf/renderer\";\nimport Form from \"./components/Form\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction App() {\n    let myDocument = <MyDocument />;\n    const [instance, update] = usePDF({ myDocument });\n\n    let [cvInfo, setCVInfo] = useState({\n        personal: {},\n        experience: {},\n        education: {},\n    });\n\n\n    const updateCVInfo = (personal, experience, education) => {\n        let cvInfoCopy = Object.assign({}, cvInfo);\n        cvInfoCopy.personal = personal;\n        cvInfoCopy.experience = experience;\n        cvInfoCopy.education = education;\n        setCVInfo(cvInfoCopy);\n        \n        //console.log(instance)\n    };\n\n\n\n\n    // useEffect(() => {\n    //     update();\n    // }, [cvInfo]);\n\n    return (\n        <div className=\"flex\">\n            <Form updateCVInfo={updateCVInfo} updatePDF={update}></Form>\n            <div className=\"hidden md:inline-block flex-auto\">\n                <PDFViewer className=\"w-full h-screen\">\n                    <MyDocument cvInfo={cvInfo}></MyDocument>\n                </PDFViewer>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}