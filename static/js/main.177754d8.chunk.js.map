{"version":3,"sources":["components/MyDocument.js","components/Header.js","components/Experience.js","components/Footer.js","components/Education.js","components/Personal.js","components/Form.js","App.js","index.js"],"names":["styles","StyleSheet","create","page","flexDirection","header","padding","backgroundColor","height","alignItems","color","fontSize","Firstname","marginLeft","name","paddingRight","mainContent","sideBar","width","titleText","fontWeight","paddingBottom","borderBottom","borderBottomColor","sideBarInfo","paddingTop","sideBarInfoText","experienceSection","describeSection","lineHeight","previousJobs","jobTitleFromDate","justifyContent","jobTitle","jobDate","jobCompanyCity","flexParent","compnyCity","jobDescribe","eduDate","relevantCourses","courses","paddingLeft","eduDegree","MyDocument","cvInfo","size","style","personal","firstName","Lastname","lastName","phone","email","address","city","state","zip","describe","experience","map","job","position","from","to","company","education","edu","degree","major","university","pathVariants","hidden","pathLength","visible","transition","duration","ease","svgVariants","rotate","Header","className","motion","svg","xmlns","fill","viewBox","stroke","variants","initial","animate","path","strokeLinecap","strokeLinejoin","strokeWidth","d","Experience","id","handleAdd","deleteJob","updateJobs","useState","setPosition","setCompany","setCity","fromDate","setFromDate","toDate","setToDate","setJobDescribe","setExperience","useEffect","experienceCopy","Object","assign","updateExperience","htmlFor","type","placeholder","value","onChange","e","target","required","cols","rows","onClick","Footer","rel","href","focusable","role","Education","increaseEducation","deleteEducation","updateEducationArr","setUniversity","setDegree","setMajor","setRelevantCourses","setEducation","educationCopy","updateEducation","Personal","updatePersonalInfo","setFirstName","setLastName","setEmail","setPhone","setAddress","setZip","setDescribe","setState","personalObj","setPersonalObj","objCopy","updatePersonalObj","Form","updateCVInfo","downloadPDF","setShow","description","setPersonal","uuidv4","jobs","setJobs","educations","setEducations","increaseJobs","newJobs","slice","push","deleteJobs","filter","obj","jobsCopy","jobsExist","forEach","neweducations","newEdu","newEducations","eduExist","complete","key","maxHeight","App","myDocument","usePDF","setCVInfo","cvInfoCopy","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.177754d8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Page, Text, View, Document, StyleSheet } from \"@react-pdf/renderer\";\r\n\r\n// Create styles\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n        flexDirection: \"column\",\r\n    },\r\n    header: {\r\n        padding: 20,\r\n        backgroundColor: \"#003A75\",\r\n        height: \"80px\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"row\",\r\n        color: \"#fff\",\r\n        fontSize: \"30px\",\r\n    },\r\n    Firstname: {\r\n        marginLeft: \"10px\",\r\n    },\r\n    name: {\r\n        paddingRight: \"5px\",\r\n    },\r\n\r\n    mainContent: {\r\n        flexDirection: \"row\",\r\n    },\r\n    sideBar: {\r\n        padding: \"20px 15px\",\r\n        width: \"150px\",\r\n        backgroundColor: \"#F4F4F4\",\r\n        height: \"760px\",\r\n    },\r\n    titleText: {\r\n        fontSize: \"16px\",\r\n        color: \"#003A75\",\r\n        fontWeight: \"bolder\",\r\n        paddingBottom: \"3px\",\r\n        borderBottom: \"1px\",\r\n        borderBottomColor: \"#A9A9A9\",\r\n    },\r\n    sideBarInfo: {\r\n        paddingTop: \"15px\",\r\n        fontSize: \"12px\",\r\n    },\r\n    sideBarInfoText: {\r\n        fontSize: \"11px\",\r\n        paddingTop: \"5px\",\r\n        fontWeight: \"light\",\r\n    },\r\n    experienceSection: {\r\n        width: \"450px\",\r\n        padding: \"15px\",\r\n    },\r\n    describeSection: {\r\n        fontSize: \"12px\",\r\n        padding: \"20px 0px\",\r\n        lineHeight: \"2px\",\r\n    },\r\n    previousJobs: {\r\n        flexDirection: \"column\",\r\n        padding: \"8px 10px\",\r\n    },\r\n    jobTitleFromDate: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        width: \"400px\",\r\n    },\r\n    jobTitle: {\r\n        fontSize: \"15px\",\r\n    },\r\n    jobDate: {\r\n        fontSize: \"12px\",\r\n    },\r\n    jobCompanyCity: {\r\n        flexDirection: \"row\",\r\n        width: \"400px\",\r\n        alignItems: \"center\",\r\n        paddingTop: \"2px\",\r\n    },\r\n    flexParent: {\r\n        paddingTop: \"10px\",\r\n        borderBottom: \"1px\",\r\n        borderBottomColor: \"#A9A9A9\",\r\n        paddingBottom: \"5px\",\r\n    },\r\n    compnyCity: {\r\n        fontSize: \"12px\",\r\n    },\r\n    jobDescribe: {\r\n        fontSize: \"12px\",\r\n        paddingTop: \"5px\",\r\n    },\r\n    eduDate: {\r\n        fontSize: \"10px\",\r\n        paddingTop: \"3px\",\r\n    },\r\n    relevantCourses: {\r\n        fontSize: \"12px\",\r\n        paddingTop: \"10px\",\r\n    },\r\n    courses: {\r\n        fontSize: \"10px\",\r\n        paddingTop: \"5px\",\r\n        paddingLeft: \"5px\",\r\n    },\r\n    eduDegree: {\r\n        fontSize: \"15px\",\r\n    },\r\n});\r\n\r\n// Create Document Component\r\nconst MyDocument = ({ cvInfo }) => (\r\n    <Document>\r\n        <Page size=\"A4\" style={styles.page}>\r\n            {/* Header */}\r\n\r\n            <View></View>\r\n            <View style={styles.header}>\r\n                <View style={styles.Firstname}>\r\n                    {cvInfo.personal.firstName ? (\r\n                        <Text>{cvInfo.personal.firstName} </Text>\r\n                    ) : (\r\n                        <Text>First Name</Text>\r\n                    )}\r\n                </View>\r\n                <View style={styles.Lastname}>\r\n                    {cvInfo.personal.lastName ? (\r\n                        <Text>{` ${cvInfo.personal.lastName}`} </Text>\r\n                    ) : (\r\n                        <Text>Last Name</Text>\r\n                    )}\r\n                </View>\r\n            </View>\r\n\r\n            {/* main content */}\r\n            <View style={styles.mainContent}>\r\n                {/* sidebar */}\r\n                <View style={styles.sideBar}>\r\n                    <Text style={styles.titleText}>Personal Info</Text>\r\n                    <Text style={styles.sideBarInfo}>Phone:</Text>\r\n                    <Text style={styles.sideBarInfoText}>\r\n                        {cvInfo.personal.phone ? (\r\n                            <Text>{` ${cvInfo.personal.phone}`} </Text>\r\n                        ) : (\r\n                            <Text>xxx-xxx-xxxx</Text>\r\n                        )}\r\n                    </Text>\r\n\r\n                    <Text style={styles.sideBarInfo}>Email:</Text>\r\n                    <Text style={styles.sideBarInfoText}>\r\n                        {cvInfo.personal.email ? (\r\n                            <Text>{` ${cvInfo.personal.email}`} </Text>\r\n                        ) : (\r\n                            <Text>email@email.com</Text>\r\n                        )}\r\n                    </Text>\r\n\r\n                    <Text style={styles.sideBarInfo}>Address:</Text>\r\n                    <Text style={styles.sideBarInfoText}>\r\n                        {cvInfo.personal.address ? (\r\n                            <Text>{` ${cvInfo.personal.address}`} </Text>\r\n                        ) : (\r\n                            <Text>123 Maple str.</Text>\r\n                        )}\r\n                    </Text>\r\n\r\n                    <Text style={styles.sideBarInfoText}>\r\n                        {cvInfo.personal.city ? (\r\n                            <Text>{` ${cvInfo.personal.city}`} </Text>\r\n                        ) : (\r\n                            <Text>city</Text>\r\n                        )}\r\n                        <Text>,</Text>\r\n                        {cvInfo.personal.state ? (\r\n                            <Text>{` ${cvInfo.personal.state}`} </Text>\r\n                        ) : (\r\n                            <Text>state</Text>\r\n                        )}\r\n                    </Text>\r\n\r\n                    <Text style={styles.sideBarInfoText}>\r\n                        {cvInfo.personal.zip ? (\r\n                            <Text>{` ${cvInfo.personal.zip}`} </Text>\r\n                        ) : (\r\n                            <Text>xxxxx</Text>\r\n                        )}\r\n                    </Text>\r\n                </View>\r\n\r\n                {/* work and education */}\r\n                <View style={styles.experienceSection}>\r\n                    <Text style={styles.describeSection}>\r\n                        {cvInfo.personal.describe ? (\r\n                            <Text>{` ${cvInfo.personal.describe}`} </Text>\r\n                        ) : (\r\n                            <Text>\r\n                                Lorem ipsum, dolor sit amet consectetur\r\n                                adipisicing elit. Assumenda temporibus sunt\r\n                                neque rem. Harum nihil maiores, pariatur\r\n                                repellat quae esse, id asperiores, nesciunt\r\n                                mollitia cum sapiente explicabo libero\r\n                                repellendus neque!\r\n                            </Text>\r\n                        )}\r\n                    </Text>\r\n\r\n                    <Text style={styles.titleText}>Experience</Text>\r\n                    {/* previous jobs */}\r\n                    {/* to do add some description opttion for each job */}\r\n                    <View style={styles.previousJobs}>\r\n                        {cvInfo.experience.map((job) => (\r\n                            <View style={styles.flexParent}>\r\n                                <View style={styles.jobTitleFromDate}>\r\n                                    <Text style={styles.jobTitle}>\r\n                                        {job.position}\r\n                                    </Text>\r\n                                    <Text style={styles.jobDate}>\r\n                                        <Text>{job.from}</Text>\r\n                                        <Text> - </Text>\r\n                                        <Text>{job.to}</Text>\r\n                                    </Text>\r\n                                </View>\r\n                                <View style={styles.jobCompanyCity}>\r\n                                    <Text style={styles.compnyCity}>\r\n                                        {job.company}\r\n                                    </Text>\r\n                                    <Text> </Text>\r\n                                    <Text style={styles.compnyCity}>\r\n                                        {job.city}\r\n                                    </Text>\r\n                                </View>\r\n                                <Text style={styles.jobDescribe}>\r\n                                    {job.jobDescribe}\r\n                                </Text>\r\n                            </View>\r\n                        ))}\r\n                    </View>\r\n\r\n                    <Text style={styles.titleText}>Education</Text>\r\n                    {/* previous Education */}\r\n                    <View style={styles.previousJobs}>\r\n                        {cvInfo.education.map((edu) => (\r\n                            <View style={styles.flexParent}>\r\n                                <View style={styles.jobTitleFromDate}>\r\n                                    <Text style={styles.eduDegree}>\r\n                                        {edu.degree}\r\n                                    </Text>\r\n                                    <Text style={styles.jobDate}>\r\n                                        <Text>{edu.major}</Text>\r\n                                    </Text>\r\n                                </View>\r\n                                <View style={styles.jobCompanyCity}>\r\n                                    <Text style={styles.compnyCity}>\r\n                                        {edu.university}\r\n                                    </Text>\r\n                                    <Text>, </Text>\r\n                                    <Text style={styles.compnyCity}>\r\n                                        {edu.city}\r\n                                    </Text>\r\n                                </View>\r\n                                <Text style={styles.eduDate}>\r\n                                    <Text>{edu.from}</Text>\r\n                                    <Text> - </Text>\r\n                                    <Text>{edu.to}</Text>\r\n                                </Text>\r\n                                <Text style={styles.relevantCourses}>\r\n                                    Relevant Courses:\r\n                                </Text>\r\n                                <Text style={styles.courses}>\r\n                                    {edu.relevantCourses}\r\n                                </Text>\r\n                            </View>\r\n                        ))}\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </Page>\r\n    </Document>\r\n);\r\n\r\nexport default MyDocument;\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst pathVariants = {\r\n    hidden: {\r\n        pathLength: 0,\r\n    },\r\n    visible: {\r\n        pathLength: 1,\r\n        transition: { duration: 2, ease: \"easeInOut\" },\r\n    },\r\n};\r\n\r\nconst svgVariants = {\r\n    hidden: { rotate: -90 },\r\n    visible: {\r\n        rotate: 0,\r\n        transition: { duration: 1 },\r\n    },\r\n};\r\n\r\nfunction Header() {\r\n    return (\r\n        <h1 className=\"text-4xl font-semibold px-6 pt-6 text-gray-100 flex space-x-2 mb-2 items-center h-14 \">\r\n            <div className=\"transform -scale-x-1\">\r\n                <motion.svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    className=\"h-9 w-9 mt-1 transform -scale-x-1\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                    variants={svgVariants}\r\n                    initial=\"hidden\"\r\n                    animate=\"visible\"\r\n                >\r\n                    <motion.path\r\n                        variants={pathVariants}\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={1}\r\n                        d=\"M4 5a1 1 0 011-1h14a1 1 0 011 1v2a1 1 0 01-1 1H5a1 1 0 01-1-1V5zM4 13a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H5a1 1 0 01-1-1v-6zM16 13a1 1 0 011-1h2a1 1 0 011 1v6a1 1 0 01-1 1h-2a1 1 0 01-1-1v-6z\"\r\n                    />\r\n                </motion.svg>\r\n            </div>\r\n            <span>CVENETOR</span>\r\n        </h1>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst Experience = ({ id, handleAdd, deleteJob, updateJobs }) => {\r\n    let [position, setPosition] = useState(\"\");\r\n    let [company, setCompany] = useState(\"\");\r\n    let [city, setCity] = useState(\"\");\r\n    let [fromDate, setFromDate] = useState(\"\");\r\n    let [toDate, setToDate] = useState(\"\");\r\n    let [jobDescribe, setJobDescribe] = useState(\"\");\r\n\r\n    let [experience, setExperience] = useState({\r\n        id: id,\r\n        position: \"\",\r\n        company: \"\",\r\n        city: \"\",\r\n        from: \"\",\r\n        to: \"\",\r\n        jobDescribe: \"\",\r\n    });\r\n\r\n    const updateExperience = () => {\r\n        let experienceCopy = Object.assign({}, experience);\r\n        experienceCopy.position = position;\r\n        experienceCopy.company = company;\r\n        experienceCopy.city = city;\r\n        experienceCopy.from = fromDate;\r\n        experienceCopy.to = toDate;\r\n        experienceCopy.jobDescribe = jobDescribe;\r\n        setExperience(experienceCopy);\r\n    };\r\n\r\n    useEffect(() => {\r\n        updateExperience();\r\n    }, [position, company, city, fromDate, toDate, jobDescribe]);\r\n\r\n    useEffect(() => {\r\n        updateJobs(experience);\r\n    }, [experience]);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"flex flex-col space-y-1\">\r\n                <label\r\n                    htmlFor=\"position\"\r\n                    className=\"text-sm text-gray-100 font-sans\"\r\n                >\r\n                    Position:\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"position\"\r\n                    placeholder=\"Position\"\r\n                    className=\"rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                    value={position}\r\n                    onChange={(e) => {\r\n                        setPosition(e.target.value);\r\n                    }}\r\n                    required\r\n                />\r\n            </div>\r\n\r\n            <div className=\"flex flex-col space-y-1 md:flex-row md:space-x-3 md:space-y-0 justify-center\">\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"company\" className=\"text-sm text-gray-100\">\r\n                        Company:\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"company\"\r\n                        placeholder=\"Company\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                        value={company}\r\n                        onChange={(e) => {\r\n                            setCompany(e.target.value);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"city\" className=\"text-sm text-gray-100\">\r\n                        City:\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"City\"\r\n                        placeholder=\"city\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                        value={city}\r\n                        onChange={(e) => {\r\n                            setCity(e.target.value);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex flex-col space-y-1 md:flex-row md:space-x-3 md:space-y-0 justify-center\">\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"from\" className=\"text-sm text-gray-100\">\r\n                        From:\r\n                    </label>\r\n                    <input\r\n                        type=\"date\"\r\n                        id=\"from\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1 text-xs\"\r\n                        value={fromDate}\r\n                        onChange={(e) => {\r\n                            setFromDate(e.target.value);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"To\" className=\"text-sm text-gray-100\">\r\n                        To:\r\n                    </label>\r\n                    <input\r\n                        type=\"date\"\r\n                        id=\"to\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-300 mt-1 text-xs \"\r\n                        value={toDate}\r\n                        onChange={(e) => {\r\n                            setToDate(e.target.value);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex flex-col mt-1\">\r\n                <label\r\n                    htmlFor=\"description\"\r\n                    className=\"text-sm text-gray-100 font-sans\"\r\n                >\r\n                    Job description:\r\n                </label>\r\n                <textarea\r\n                    type=\"text\"\r\n                    id=\"description\"\r\n                    placeholder=\"Description\"\r\n                    className=\"rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                    value={jobDescribe}\r\n                    onChange={(e) => {\r\n                        setJobDescribe(e.target.value);\r\n                    }}\r\n                    required\r\n                    cols=\"30\"\r\n                    rows=\"4\"\r\n                ></textarea>\r\n            </div>\r\n\r\n            <div className=\"flex flex-col\">\r\n                <button\r\n                    className=\"w-full bg-gray-300 mt-6 h-8 rounded-md text-lg font-semibold flex items-center justify-center space-x-2 hover:bg-gray-100\"\r\n                    onClick={() => handleAdd()}\r\n                >\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"h-4 w-4\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                    >\r\n                        <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            strokeWidth={2}\r\n                            d=\"M12 4v16m8-8H4\"\r\n                        />\r\n                    </svg>\r\n                    <span>Add</span>\r\n                </button>\r\n                <button\r\n                    className=\"w-full bg-black mt-4 h-8 text-gray-100 rounded-md text-lg font-semibold flex items-center justify-center  mb-3 space-x-2 hover:bg-gray-900\"\r\n                    onClick={() => deleteJob(id)}\r\n                >\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"h-4 w-4\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                    >\r\n                        <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            strokeWidth={2}\r\n                            d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\r\n                        />\r\n                    </svg>\r\n                    <span>Delete</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Experience;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n            <footer className=\"flex justify-center space-x-2 mt-5 text-sm text-gray-200 pt-1 pb-1\">\r\n                <a  target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/a1ali\" className=\"flex items-center space-x-1\">\r\n                    <svg\r\n                        aria-hidden=\"true\"\r\n                        focusable=\"false\"\r\n                        data-prefix=\"fab\"\r\n                        data-icon=\"github\"\r\n                        className=\"w-6 h-6\"\r\n                        role=\"img\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        viewBox=\"0 0 496 512\"\r\n                    >\r\n                        <path\r\n                            fill=\"currentColor\"\r\n                            d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\"\r\n                        ></path>\r\n                    </svg>\r\n                    <span className=\"text-md \">a1ali</span>\r\n                </a>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst Education = ({\r\n    id,\r\n    increaseEducation,\r\n    deleteEducation,\r\n    updateEducationArr,\r\n}) => {\r\n    let [university, setUniversity] = useState(\"\");\r\n    let [degree, setDegree] = useState(\"\");\r\n    let [city, setCity] = useState(\"\");\r\n    let [fromDate, setFromDate] = useState(\"\");\r\n    let [toDate, setToDate] = useState(\"\");\r\n    let [major, setMajor] = useState(\"\");\r\n    let [relevantCourses, setRelevantCourses] = useState(\"\");\r\n\r\n    let [education, setEducation] = useState({\r\n        id: id,\r\n        university: \"\",\r\n        degree: \"\",\r\n        city: \"\",\r\n        from: \"\",\r\n        to: \"\",\r\n        major: \"\",\r\n        relevantCourses: \"\",\r\n    });\r\n\r\n    const updateEducation = () => {\r\n        let educationCopy = Object.assign({}, education);\r\n        educationCopy.university = university;\r\n        educationCopy.degree = degree;\r\n        educationCopy.city = city;\r\n        educationCopy.from = fromDate;\r\n        educationCopy.to = toDate;\r\n        educationCopy.major = major;\r\n        educationCopy.relevantCourses = relevantCourses;\r\n        setEducation(educationCopy);\r\n    };\r\n\r\n    useEffect(() => {\r\n        updateEducation();\r\n    }, [university, degree, city, fromDate, toDate, major, relevantCourses]);\r\n\r\n    useEffect(() => {\r\n        updateEducationArr(education);\r\n    }, [education]);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"flex flex-col space-y-1\">\r\n                <label\r\n                    htmlFor=\"university\"\r\n                    className=\"text-sm text-gray-100 font-sans\"\r\n                >\r\n                    University:\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"university\"\r\n                    placeholder=\"University\"\r\n                    className=\"rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                    value={university}\r\n                    onChange={(e) => {\r\n                        setUniversity(e.target.value);\r\n                    }}\r\n                    required\r\n                />\r\n            </div>\r\n\r\n            <div className=\"flex flex-col space-y-1 md:flex-row md:space-x-3 md:space-y-0 justify-center\">\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"degree\" className=\"text-sm text-gray-100\">\r\n                        Degree:\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"degree\"\r\n                        placeholder=\"Degree\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                        value={degree}\r\n                        onChange={(e) => {\r\n                            setDegree(e.target.value);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"major\" className=\"text-sm text-gray-100\">\r\n                        Major:\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"major\"\r\n                        placeholder=\"Major\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                        value={major}\r\n                        onChange={(e) => {\r\n                            setMajor(e.target.value);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"w-full\">\r\n                <label htmlFor=\"city\" className=\"text-sm text-gray-100\">\r\n                    City:\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"City\"\r\n                    placeholder=\"city\"\r\n                    className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                    value={city}\r\n                    onChange={(e) => {\r\n                        setCity(e.target.value);\r\n                    }}\r\n                    required\r\n                />\r\n            </div>\r\n\r\n            <div className=\"flex flex-col space-y-1 md:flex-row md:space-x-3 md:space-y-0 justify-center\">\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"from\" className=\"text-sm text-gray-100\">\r\n                        From:\r\n                    </label>\r\n                    <input\r\n                        type=\"date\"\r\n                        id=\"from\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1 text-xs\"\r\n                        value={fromDate}\r\n                        onChange={(e) => {\r\n                            setFromDate(e.target.value);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"To\" className=\"text-sm text-gray-100\">\r\n                        To:\r\n                    </label>\r\n                    <input\r\n                        type=\"date\"\r\n                        id=\"to\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-300 mt-1 text-xs \"\r\n                        value={toDate}\r\n                        onChange={(e) => {\r\n                            setToDate(e.target.value);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex flex-col mt-1\">\r\n                <label\r\n                    htmlFor=\"description\"\r\n                    className=\"text-sm text-gray-100 font-sans\"\r\n                >\r\n                    Relevant courses:\r\n                </label>\r\n                <textarea\r\n                    type=\"text\"\r\n                    id=\"description\"\r\n                    placeholder=\"Relevant courses\"\r\n                    className=\"rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                    value={relevantCourses}\r\n                    onChange={(e) => {\r\n                        setRelevantCourses(e.target.value);\r\n                    }}\r\n                    required\r\n                    cols=\"30\"\r\n                    rows=\"4\"\r\n                ></textarea>\r\n            </div>\r\n\r\n            <div className=\"flex flex-col\">\r\n                <button\r\n                    className=\"w-full bg-gray-300 mt-6 h-8 rounded-md text-lg font-semibold flex items-center justify-center space-x-2 hover:bg-gray-100\"\r\n                    onClick={() => increaseEducation()}\r\n                >\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"h-4 w-4\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                    >\r\n                        <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            strokeWidth={2}\r\n                            d=\"M12 4v16m8-8H4\"\r\n                        />\r\n                    </svg>\r\n                    <span>Add</span>\r\n                </button>\r\n                <button\r\n                    className=\"w-full bg-black mt-4 h-8 text-gray-100 rounded-md text-lg font-semibold flex items-center justify-center space-x-2 hover:bg-gray-900 mb-3\"\r\n                    onClick={() => deleteEducation(id)}\r\n                >\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"h-4 w-4\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                    >\r\n                        <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            strokeWidth={2}\r\n                            d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\r\n                        />\r\n                    </svg>\r\n                    <span>Delete</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Education;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Personal = ({ updatePersonalInfo }) => {\r\n    let [firstName, setFirstName] = useState(\"\");\r\n    let [lastName, setLastName] = useState(\"\");\r\n    let [email, setEmail] = useState(\"\");\r\n    let [phone, setPhone] = useState(\"\");\r\n    let [address, setAddress] = useState(\"\");\r\n    let [city, setCity] = useState(\"\");\r\n    let [zip, setZip] = useState(\"\");\r\n    let [describe, setDescribe] = useState(\"\");\r\n    let [state, setState] = useState(\"\");\r\n\r\n    let [personalObj, setPersonalObj] = useState({});\r\n\r\n    const updatePersonalObj = () => {\r\n        let objCopy = Object.assign({}, personalObj);\r\n        objCopy.firstName = firstName;\r\n        objCopy.lastName = lastName;\r\n        objCopy.email = email;\r\n        objCopy.phone = phone;\r\n        objCopy.address = address;\r\n        objCopy.city = city;\r\n        objCopy.zip = zip;\r\n        objCopy.describe = describe;\r\n        objCopy.state = state;\r\n        setPersonalObj(objCopy);\r\n    };\r\n\r\n    useEffect(() => {\r\n        updatePersonalInfo(personalObj);\r\n    }, [personalObj]);\r\n\r\n    useEffect(() => {\r\n        updatePersonalObj();\r\n    }, [\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        phone,\r\n        address,\r\n        city,\r\n        zip,\r\n        describe,\r\n        state,\r\n    ]);\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-lg font-semibold text-gray-100 mb-2\">\r\n                Personal Information\r\n            </h1>\r\n            <div className=\"flex flex-col md:flex-row space-y-1 md:space-x-3 md:space-y-0 w-full justify-center  \">\r\n                <div className=\"w-full\">\r\n                    <label\r\n                        htmlFor=\"firstName\"\r\n                        className=\"text-sm text-gray-100\"\r\n                    >\r\n                        First name:\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"firstName\"\r\n                        placeholder=\"First name\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1 justify-center\"\r\n                        onChange={(e) => {\r\n                            setFirstName(e.target.value);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"w-full\">\r\n                    <label\r\n                        htmlFor=\"lastName\"\r\n                        className=\"text-sm text-gray-100 font-sans\"\r\n                    >\r\n                        Last name:\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"lastName\"\r\n                        placeholder=\"Last name\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                        value={lastName}\r\n                        onChange={(e) => {\r\n                            setLastName(e.target.value);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex flex-col space-y-1 md:flex-row md:space-x-3 md:space-y-0 justify-center\">\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"email\" className=\"text-sm text-gray-100\">\r\n                        Email:\r\n                    </label>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        placeholder=\"Email\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                        value={email}\r\n                        onChange={(e) => {\r\n                            setEmail(e.target.value);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"phone\" className=\"text-sm text-gray-100\">\r\n                        Phone number:\r\n                    </label>\r\n                    <input\r\n                        type=\"tel\"\r\n                        id=\"email\"\r\n                        placeholder=\"xxx-xxx-xxxx\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                        value={phone}\r\n                        onChange={(e) => {\r\n                            setPhone(e.target.value);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex flex-col space-y-1\">\r\n                <label\r\n                    htmlFor=\"address\"\r\n                    className=\"text-sm text-gray-100 font-sans\"\r\n                >\r\n                    Address:\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"address\"\r\n                    placeholder=\"Address\"\r\n                    className=\"rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                    value={address}\r\n                    onChange={(e) => {\r\n                        setAddress(e.target.value);\r\n                    }}\r\n                    required\r\n                />\r\n            </div>\r\n\r\n            <div className=\"flex flex-col\">\r\n                <label\r\n                    htmlFor=\"city\"\r\n                    className=\"text-sm text-gray-100 font-sans\"\r\n                >\r\n                    City:\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"city\"\r\n                    placeholder=\"City\"\r\n                    className=\"rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                    value={city}\r\n                    onChange={(e) => {\r\n                        setCity(e.target.value);\r\n                    }}\r\n                    required\r\n                />\r\n            </div>\r\n\r\n            <div className=\"flex flex-col space-y-1 md:flex-row md:space-x-3 md:space-y-0 justify-center\">\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"state\" className=\"text-sm text-gray-100\">\r\n                        State:\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"state\"\r\n                        placeholder=\"State\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                        value={state}\r\n                        onChange={(e) => {\r\n                            setState(e.target.value);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"zip\" className=\"text-sm text-gray-100\">\r\n                        Zip Code:\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"zip\"\r\n                        placeholder=\"zip code\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                        value={zip}\r\n                        onChange={(e) => {\r\n                            setZip(e.target.value);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex flex-col mt-1\">\r\n                <label\r\n                    htmlFor=\"description\"\r\n                    className=\"text-sm text-gray-100 font-sans\"\r\n                >\r\n                    Describe your self:\r\n                </label>\r\n                <textarea\r\n                    type=\"text\"\r\n                    id=\"description\"\r\n                    placeholder=\"Description\"\r\n                    className=\"rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                    value={describe}\r\n                    onChange={(e) => {\r\n                        setDescribe(e.target.value);\r\n                    }}\r\n                    required\r\n                    cols=\"30\"\r\n                    rows=\"4\"\r\n                ></textarea>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Personal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Experience from \"./Experience\";\r\nimport Footer from \"./Footer\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Education from \"./Education\";\r\nimport Personal from \"./Personal\";\r\nimport { PDFDownloadLink, pdf } from \"@react-pdf/renderer\";\r\n\r\nfunction Form({ updateCVInfo, downloadPDF }) {\r\n    let [show, setShow] = useState(false);\r\n\r\n    let [personal, setPersonal] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        zip: \"\",\r\n        description: \"\",\r\n    });\r\n\r\n    let [jobs, setJobs] = useState([\r\n        {\r\n            id: uuidv4(),\r\n            position: \"\",\r\n            company: \"\",\r\n            city: \"\",\r\n            from: \"\",\r\n            to: \"\",\r\n            jobDescribe: \"\",\r\n        },\r\n    ]);\r\n\r\n    let [educations, setEducations] = useState([\r\n        {\r\n            id: uuidv4(),\r\n            university: \"\",\r\n            degree: \"\",\r\n            city: \"\",\r\n            from: \"\",\r\n            to: \"\",\r\n            major: \"\",\r\n            relevantCourses: \"\",\r\n        },\r\n    ]);\r\n\r\n    const updatePersonalInfo = (obj) => {\r\n        let personalCopy = Object.assign({}, personal);\r\n        personalCopy = obj;\r\n        setPersonal(personalCopy);\r\n    };\r\n\r\n    const increaseJobs = () => {\r\n        let newJobs = jobs.slice();\r\n        newJobs.push({ id: uuidv4() });\r\n        setJobs(newJobs);\r\n    };\r\n\r\n    const deleteJobs = (id) => {\r\n        let newJobs = jobs.filter((job) => job.id !== id);\r\n        setJobs(newJobs);\r\n    };\r\n\r\n    const updateJobs = (obj) => {\r\n        let jobsCopy = jobs.slice();\r\n        let jobsExist = false;\r\n        jobsCopy.forEach((job) => {\r\n            if (job.id === obj.id) {\r\n                jobsExist = true;\r\n                job.position = obj.position;\r\n                job.company = obj.company;\r\n                job.city = obj.city;\r\n                job.from = obj.from;\r\n                job.to = obj.to;\r\n                job.jobDescribe = obj.jobDescribe;\r\n            }\r\n        });\r\n        if (!jobsExist) {\r\n            jobsCopy.push(obj);\r\n        }\r\n        setJobs(jobsCopy);\r\n    };\r\n\r\n    const increaseEducation = () => {\r\n        let neweducations = educations.slice();\r\n        neweducations.push({ id: uuidv4() });\r\n        setEducations(neweducations);\r\n    };\r\n\r\n    const deleteEducation = (id) => {\r\n        let newEdu = educations.filter((edu) => edu.id !== id);\r\n        setEducations(newEdu);\r\n    };\r\n\r\n    const updateEducation = (obj) => {\r\n        let newEducations = educations.slice();\r\n        let eduExist = false;\r\n        newEducations.forEach((edu) => {\r\n            if (edu.id === obj.id) {\r\n                eduExist = true;\r\n                edu.university = obj.university;\r\n                edu.degree = obj.degree;\r\n                edu.city = obj.city;\r\n                edu.from = obj.from;\r\n                edu.to = obj.to;\r\n                edu.major = obj.major;\r\n                edu.relevantCourses = obj.relevantCourses;\r\n            }\r\n        });\r\n        if (!eduExist) {\r\n            newEducations.push(obj);\r\n        }\r\n        setEducations(newEducations);\r\n    };\r\n\r\n    useEffect(() => {\r\n        updateCVInfo(personal, jobs, educations);\r\n    }, [personal, educations, jobs]);\r\n\r\n    useEffect(() => {\r\n        let complete = true;\r\n        for (let key in personal) {\r\n            if (personal[key] === \"\") {\r\n                complete = false;\r\n            }\r\n        }\r\n\r\n        jobs.forEach((job) => {\r\n            for (let key in job) {\r\n                if (job[key] === \"\") {\r\n                    complete = false;\r\n                }\r\n            }\r\n        });\r\n\r\n        educations.forEach((job) => {\r\n            for (let key in job) {\r\n                if (job[key] === \"\") {\r\n                    complete = false;\r\n                }\r\n            }\r\n        });\r\n\r\n        if (complete) {\r\n            setShow(true);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"w-full md:w-1/2 lg:w-1/3 bg-gray-600 border-r-2 border-gray-800 flex flex-col\">\r\n            <Header></Header>\r\n            <form\r\n                className=\"flex flex-col w-full  p-6 pt-16 space-y-2 overflow-y-auto scrollbar-thin scrollbar-thumb-rounded-md scrollbar-thumb-gray-500 scrollbar-track-gray-400\"\r\n                style={{ maxHeight: `calc(100vh - 70px)` }}\r\n            >\r\n                <section className=\"mb-4\">\r\n                    <Personal\r\n                        updatePersonalInfo={updatePersonalInfo}\r\n                    ></Personal>\r\n                </section>\r\n\r\n                <section className=\"border-t border-gray-400\">\r\n                    <h1 className=\"text-lg font-semibold text-gray-100 mb-2 mt-4\">\r\n                        Work Experience\r\n                    </h1>\r\n\r\n                    {jobs.map((job) => (\r\n                        <Experience\r\n                            id={job.id}\r\n                            handleAdd={increaseJobs}\r\n                            deleteJob={deleteJobs}\r\n                            updateJobs={updateJobs}\r\n                        ></Experience>\r\n                    ))}\r\n                </section>\r\n\r\n                <section className=\"border-t border-gray-400\">\r\n                    <h1 className=\"text-lg font-semibold text-gray-100 mb-2 mt-4\">\r\n                        Education\r\n                    </h1>\r\n                    {educations.map((edu) => (\r\n                        <Education\r\n                            id={edu.id}\r\n                            increaseEducation={increaseEducation}\r\n                            deleteEducation={deleteEducation}\r\n                            updateEducationArr={updateEducation}\r\n                        ></Education>\r\n                    ))}\r\n                </section>\r\n\r\n                {/* <button\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        downloadPDF();\r\n                    }}\r\n                >\r\n                    Update PDF\r\n                </button> */}\r\n                {/* <PDFDownloadLink document={downloadPDF} fileName=\"somename.pdf\">\r\n                    {({ blob, url, loading, error }) =>\r\n                        loading ? \"Loading document...\" : \"Download now!\"\r\n                    }\r\n                </PDFDownloadLink> */}\r\n                {/* {show ? (\r\n                    <PDFDownloadLink\r\n                        document={downloadPDF}\r\n                        fileName=\"somename.pdf\"\r\n                        style={{\r\n                            textDecoration: \"none\",\r\n                            padding: \"10px\",\r\n                            color: \"#4a4a4a\",\r\n                            backgroundColor: \"#f2f2f2\",\r\n                            border: \"1px solid #4a4a4a\",\r\n                        }}\r\n                    >\r\n                        {({ blob, url, loading, error }) =>\r\n                            loading ? \"Loading document...\" : \"Download now!\"\r\n                        }\r\n                    </PDFDownloadLink>\r\n                ) : (\r\n                    <span>false</span>\r\n                )} */}\r\n                {/* {show? console.log(pdf(downloadPDF).toBlob()):<span>false</span>} */}\r\n                <Footer />\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n","import MyDocument from \"./components/MyDocument\";\nimport ReactPDF, {\n    PDFViewer,\n    usePDF,\n    PDFDownloadLink,\n} from \"@react-pdf/renderer\";\nimport Form from \"./components/Form\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction App() {\n    let myDocument = <MyDocument />;\n    const [instance, update] = usePDF({ myDocument });\n\n    let [cvInfo, setCVInfo] = useState({\n        personal: {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            phone: \"\",\n            address: \"\",\n            city: \"\",\n            state: \"\",\n            zip: \"\",\n            description: \"\",\n        },\n        experience: [\n            {\n                id: uuidv4(),\n                position: \"\",\n                company: \"\",\n                city: \"\",\n                from: \"\",\n                to: \"\",\n                jobDescribe: \"\",\n            },\n        ],\n        education: [\n            {\n                id: uuidv4(),\n                university: \"\",\n                degree: \"\",\n                city: \"\",\n                from: \"\",\n                to: \"\",\n                major: \"\",\n                relevantCourses: \"\",\n            },\n        ],\n    });\n\n    const updateCVInfo = (personal, experience, education) => {\n        let cvInfoCopy = Object.assign({}, cvInfo);\n        cvInfoCopy.personal = personal;\n        cvInfoCopy.experience = experience;\n        cvInfoCopy.education = education;\n        setCVInfo(cvInfoCopy);\n    };\n\n    const downloadPDF = () => {\n        ReactPDF.render(<MyDocument />, `example.pdf`);\n    };\n\n    return (\n        <div className=\"flex\">\n            <Form\n                updateCVInfo={updateCVInfo}\n                downloadPDF={<MyDocument></MyDocument>}\n            ></Form>\n            <div className=\"hidden md:inline-block flex-auto\">\n                <PDFViewer className=\"w-full h-screen\">\n                    <MyDocument cvInfo={cvInfo}></MyDocument>\n                </PDFViewer>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}