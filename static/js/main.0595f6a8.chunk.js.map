{"version":3,"sources":["components/MyDocument.js","components/Header.js","components/Experience.js","components/Footer.js","components/Education.js","components/Form.js","App.js","index.js"],"names":["styles","StyleSheet","create","page","flexDirection","backgroundColor","section","margin","padding","flexGrow","MyDocument","size","style","pathVariants","hidden","pathLength","visible","transition","duration","ease","svgVariants","rotate","Header","className","motion","svg","xmlns","fill","viewBox","stroke","variants","initial","animate","path","strokeLinecap","strokeLinejoin","strokeWidth","d","Experience","id","handleAdd","deleteJob","updateJobs","useState","position","setPosition","company","setCompany","city","setCity","fromDate","setFromDate","toDate","setToDate","from","to","experience","setExperience","updateExperience","experienceCopy","Object","assign","htmlFor","type","placeholder","value","onChange","e","target","required","onClick","Footer","rel","href","focusable","role","Education","increaseEducation","deleteEducation","updateEducationArr","university","setUniversity","degree","setDegree","major","setMajor","education","setEducation","updateEducation","educationCopy","Form","firstName","lastName","email","phone","address","state","zip","description","uuidv4","jobs","setJobs","educations","setEducations","increaseJobs","newJobs","slice","push","deleteJobs","filter","job","obj","jobsCopy","jobsExist","forEach","neweducations","newEdu","edu","newEducations","eduExist","maxHeight","maxLength","pattern","cols","rows","map","App","myDocument","usePDF","instance","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0595f6a8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Page, Text, View, Document, StyleSheet } from \"@react-pdf/renderer\";\r\n\r\n// Create styles\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n        flexDirection: \"row\",\r\n        backgroundColor: \"#E4E4E4\",\r\n    },\r\n    section: {\r\n        margin: 10,\r\n        padding: 10,\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\n// Create Document Component\r\nconst MyDocument = () => (\r\n        <Document>\r\n            <Page size=\"A4\" style={styles.page}>\r\n                <View style={styles.section}>\r\n                    <Text>Section #1 dfdfdfdf</Text>\r\n                </View>\r\n                <View style={styles.section}>\r\n                    <Text>Section #2 dfdfdfdfd</Text>\r\n                </View>\r\n            </Page>\r\n        </Document>\r\n    \r\n);\r\n\r\nexport default MyDocument;\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst pathVariants = {\r\n    hidden: {\r\n        pathLength: 0,\r\n    },\r\n    visible: {\r\n        pathLength: 1,\r\n        transition: { duration: 2, ease: \"easeInOut\" },\r\n    },\r\n};\r\n\r\nconst svgVariants = {\r\n    hidden: { rotate: 45 },\r\n    visible: {\r\n        rotate: 0,\r\n        transition: { duration: 1 },\r\n    },\r\n};\r\n\r\nfunction Header() {\r\n    return (\r\n        <h1 className=\"text-4xl font-semibold px-6 pt-6 text-gray-100 flex space-x-2 mb-2 items-center h-14\">\r\n            <motion.svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"h-9 w-9 mt-1\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n                variants={svgVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n            >\r\n                <motion.path\r\n                    variants={pathVariants}\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={1}\r\n                    d=\"M4 5a1 1 0 011-1h14a1 1 0 011 1v2a1 1 0 01-1 1H5a1 1 0 01-1-1V5zM4 13a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H5a1 1 0 01-1-1v-6zM16 13a1 1 0 011-1h2a1 1 0 011 1v6a1 1 0 01-1 1h-2a1 1 0 01-1-1v-6z\"\r\n                />\r\n            </motion.svg>\r\n            <span>CVENETOR</span>\r\n        </h1>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import { useState } from \"react\";\r\n\r\nconst Experience = ({ id, handleAdd, deleteJob, updateJobs }) => {\r\n    let [position, setPosition] = useState(\"\");\r\n    let [company, setCompany] = useState(\"\");\r\n    let [city, setCity] = useState(\"\");\r\n    let [fromDate, setFromDate] = useState(\"\");\r\n    let [toDate, setToDate] = useState(\"\");\r\n\r\n    let [experience, setExperience] = useState({\r\n        id: id,\r\n        position: \"\",\r\n        company: \"\",\r\n        city: \"\",\r\n        from: \"\",\r\n        to: \"\",\r\n    });\r\n\r\n    const updateExperience = () => {\r\n        let experienceCopy = Object.assign({}, experience);\r\n        experienceCopy.position = position;\r\n        experienceCopy.company = company;\r\n        experienceCopy.city = city;\r\n        experienceCopy.from = fromDate;\r\n        experienceCopy.to = toDate;\r\n        setExperience(experienceCopy);\r\n    };\r\n    return (\r\n        <div>\r\n            <div className=\"flex flex-col space-y-1\">\r\n                <label\r\n                    htmlFor=\"position\"\r\n                    className=\"text-sm text-gray-100 font-sans\"\r\n                >\r\n                    Position:\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"position\"\r\n                    placeholder=\"Position\"\r\n                    className=\"rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                    value={position}\r\n                    onChange={(e) => {\r\n                        setPosition(e.target.value);\r\n                        updateExperience();\r\n                        updateJobs(experience);\r\n                    }}\r\n                    required\r\n                />\r\n            </div>\r\n\r\n            <div className=\"flex flex-col space-y-1 md:flex-row md:space-x-3 md:space-y-0 justify-center\">\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"company\" className=\"text-sm text-gray-100\">\r\n                        Company:\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"company\"\r\n                        placeholder=\"Company\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                        value={company}\r\n                        onChange={(e) => {\r\n                            setCompany(e.target.value);\r\n                            updateExperience();\r\n                            updateJobs(experience);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"city\" className=\"text-sm text-gray-100\">\r\n                        City:\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"City\"\r\n                        placeholder=\"city\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                        value={city}\r\n                        onChange={(e) => {\r\n                            setCity(e.target.value);\r\n                            updateExperience();\r\n                            updateJobs(experience);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex flex-col space-y-1 md:flex-row md:space-x-3 md:space-y-0 justify-center\">\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"from\" className=\"text-sm text-gray-100\">\r\n                        From:\r\n                    </label>\r\n                    <input\r\n                        type=\"date\"\r\n                        id=\"from\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1 text-xs\"\r\n                        value={fromDate}\r\n                        onChange={(e) => {\r\n                            setFromDate(e.target.value);\r\n                            updateExperience();\r\n                            updateJobs(experience);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"To\" className=\"text-sm text-gray-100\">\r\n                        To:\r\n                    </label>\r\n                    <input\r\n                        type=\"date\"\r\n                        id=\"to\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-300 mt-1 text-xs \"\r\n                        value={toDate}\r\n                        onChange={(e) => {\r\n                            setToDate(e.target.value);\r\n                            updateExperience();\r\n                            updateJobs(experience);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"flex flex-col\">\r\n                <button\r\n                    className=\"w-full bg-gray-300 mt-6 h-8 rounded-md text-lg font-semibold flex items-center justify-center space-x-2 hover:bg-gray-100\"\r\n                    onClick={() => handleAdd()}\r\n                >\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"h-4 w-4\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                    >\r\n                        <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            strokeWidth={2}\r\n                            d=\"M12 4v16m8-8H4\"\r\n                        />\r\n                    </svg>\r\n                    <span>Add</span>\r\n                </button>\r\n                <button\r\n                    className=\"w-full bg-black mt-4 h-8 text-gray-100 rounded-md text-lg font-semibold flex items-center justify-center  mb-3 space-x-2 hover:bg-gray-900\"\r\n                    onClick={() => deleteJob(id)}\r\n                >\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"h-4 w-4\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                    >\r\n                        <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            strokeWidth={2}\r\n                            d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\r\n                        />\r\n                    </svg>\r\n                    <span>Delete</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Experience","import React from \"react\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n            <footer className=\"flex justify-center space-x-2 mt-5 text-sm text-gray-200 pt-1 pb-1\">\r\n                <a  target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/a1ali\" className=\"flex items-center space-x-1\">\r\n                    <svg\r\n                        aria-hidden=\"true\"\r\n                        focusable=\"false\"\r\n                        data-prefix=\"fab\"\r\n                        data-icon=\"github\"\r\n                        className=\"w-6 h-6\"\r\n                        role=\"img\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        viewBox=\"0 0 496 512\"\r\n                    >\r\n                        <path\r\n                            fill=\"currentColor\"\r\n                            d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\"\r\n                        ></path>\r\n                    </svg>\r\n                    <span className=\"text-md \">a1ali</span>\r\n                </a>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import { useState } from \"react\";\r\n\r\nconst Education = ({ id, increaseEducation, deleteEducation, updateEducationArr }) => {\r\n    let [university, setUniversity] = useState(\"\");\r\n    let [degree, setDegree] = useState(\"\");\r\n    let [city, setCity] = useState(\"\");\r\n    let [fromDate, setFromDate] = useState(\"\");\r\n    let [toDate, setToDate] = useState(\"\");\r\n    let [major, setMajor] = useState(\"\");\r\n\r\n    let [education, setEducation] = useState({\r\n        id: id,\r\n        university: \"\",\r\n        degree: \"\",\r\n        city: \"\",\r\n        from: \"\",\r\n        to: \"\",\r\n        major: \"\",\r\n    });\r\n\r\n    const updateEducation = () => {\r\n        let educationCopy = Object.assign({}, education);\r\n        educationCopy.university = university;\r\n        educationCopy.degree = degree;\r\n        educationCopy.city = city;\r\n        educationCopy.from = fromDate;\r\n        educationCopy.to = toDate;\r\n        educationCopy.major = major;\r\n        setEducation(educationCopy);\r\n    };\r\n    return (\r\n        <div >\r\n            <div className=\"flex flex-col space-y-1\">\r\n                <label\r\n                    htmlFor=\"university\"\r\n                    className=\"text-sm text-gray-100 font-sans\"\r\n                >\r\n                    University:\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"university\"\r\n                    placeholder=\"University\"\r\n                    className=\"rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                    value={university}\r\n                    onChange={(e) => {\r\n                        setUniversity(e.target.value);\r\n                        updateEducation();\r\n                        updateEducationArr(education);\r\n                    }}\r\n                    required\r\n                />\r\n            </div>\r\n\r\n            <div className=\"flex flex-col space-y-1 md:flex-row md:space-x-3 md:space-y-0 justify-center\">\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"degree\" className=\"text-sm text-gray-100\">\r\n                        Degree:\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"degree\"\r\n                        placeholder=\"Degree\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                        value={degree}\r\n                        onChange={(e) => {\r\n                            setDegree(e.target.value);\r\n                            updateEducation();\r\n                            updateEducationArr(education);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"major\" className=\"text-sm text-gray-100\">\r\n                    Major:\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"major\"\r\n                        placeholder=\"Major\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                        value={major}\r\n                        onChange={(e) => {\r\n                            setMajor(e.target.value);\r\n                            updateEducation();\r\n                            updateEducationArr(education);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"w-full\">\r\n                    <label htmlFor=\"city\" className=\"text-sm text-gray-100\">\r\n                        City:\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"City\"\r\n                        placeholder=\"city\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                        value={city}\r\n                        onChange={(e) => {\r\n                            setCity(e.target.value);\r\n                            updateEducation();\r\n                            updateEducationArr(education);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n            <div className=\"flex flex-col space-y-1 md:flex-row md:space-x-3 md:space-y-0 justify-center\">\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"from\" className=\"text-sm text-gray-100\">\r\n                        From:\r\n                    </label>\r\n                    <input\r\n                        type=\"date\"\r\n                        id=\"from\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1 text-xs\"\r\n                        value={fromDate}\r\n                        onChange={(e) => {\r\n                            setFromDate(e.target.value);\r\n                            updateEducation();\r\n                            updateEducationArr(education);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"w-full\">\r\n                    <label htmlFor=\"To\" className=\"text-sm text-gray-100\">\r\n                        To:\r\n                    </label>\r\n                    <input\r\n                        type=\"date\"\r\n                        id=\"to\"\r\n                        className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-300 mt-1 text-xs \"\r\n                        value={toDate}\r\n                        onChange={(e) => {\r\n                            setToDate(e.target.value);\r\n                            updateEducation();\r\n                            updateEducationArr(education);\r\n                        }}\r\n                        required\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"flex flex-col\">\r\n                <button\r\n                    className=\"w-full bg-gray-300 mt-6 h-8 rounded-md text-lg font-semibold flex items-center justify-center space-x-2 hover:bg-gray-100\"\r\n                    onClick={() => increaseEducation()}\r\n                >\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"h-4 w-4\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                    >\r\n                        <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            strokeWidth={2}\r\n                            d=\"M12 4v16m8-8H4\"\r\n                        />\r\n                    </svg>\r\n                    <span>Add</span>\r\n                </button>\r\n                <button\r\n                    className=\"w-full bg-black mt-4 h-8 text-gray-100 rounded-md text-lg font-semibold flex items-center justify-center space-x-2 hover:bg-gray-900 mb-3\"\r\n                    onClick={() => deleteEducation(id)}\r\n                >\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"h-4 w-4\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                    >\r\n                        <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            strokeWidth={2}\r\n                            d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\r\n                        />\r\n                    </svg>\r\n                    <span>Delete</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Education","import React, { useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Experience from \"./Experience\";\r\nimport Footer from \"./Footer\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Education from \"./Education\";\r\nimport { m } from \"framer-motion\";\r\n\r\nfunction Form() {\r\n    let [firstName, setFirst] = useState(\"\");\r\n\r\n    let [personal, setPersonal] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        zip: \"\",\r\n        description: \"\",\r\n    });\r\n\r\n    let [jobs, setJobs] = useState([\r\n        { id: uuidv4(), position: \"\", company: \"\", city: \"\", from: \"\", to: \"\" },\r\n    ]);\r\n    \r\n    let [educations, setEducations] = useState([\r\n        {\r\n            id: uuidv4(),\r\n            university: \"\",\r\n            degree: \"\",\r\n            city: \"\",\r\n            from: \"\",\r\n            to: \"\",\r\n            major: \"\",\r\n        },\r\n    ]);\r\n    // let [experience, setExperience] = useState({});\r\n\r\n    const increaseJobs = () => {\r\n        let newJobs = jobs.slice();\r\n        newJobs.push({ id: uuidv4() });\r\n        setJobs(newJobs);\r\n    };\r\n\r\n    const deleteJobs = (id) => {\r\n        let newJobs = jobs.filter((job) => job.id !== id);\r\n        setJobs(newJobs);\r\n    };\r\n\r\n    const updateJobs = (obj) => {\r\n        let jobsCopy = jobs.slice();\r\n        let jobsExist = false;\r\n        jobsCopy.forEach((job) => {\r\n            if (job.id === obj.id) {\r\n                jobsExist = true;\r\n                job.position = obj.position;\r\n                job.company = obj.company;\r\n                job.city = obj.city;\r\n                job.from = obj.from;\r\n                job.to = obj.to;\r\n                //create a reference free copy of the object\r\n            }\r\n        });\r\n        if (!jobsExist) {\r\n            jobsCopy.push(obj);\r\n        }\r\n        setJobs(jobsCopy);\r\n    };\r\n\r\n    const increaseEducation = () => {\r\n        let neweducations = educations.slice();\r\n        neweducations.push({ id: uuidv4() });\r\n        setEducations(neweducations);\r\n    };\r\n\r\n    const deleteEducation = (id) => {\r\n        let newEdu = educations.filter((edu) => edu.id !== id);\r\n        setEducations(newEdu);\r\n    };\r\n\r\n    const updateEducation = (obj) => {\r\n        let newEducations = educations.slice();\r\n        let eduExist = false;\r\n        newEducations.forEach((edu) => {\r\n            if (edu.id === obj.id) {\r\n                eduExist = true;\r\n                edu.university = obj.university;\r\n                edu.degree = obj.degree;\r\n                edu.city = obj.city;\r\n                edu.from = obj.from;\r\n                edu.to = obj.to;\r\n                edu.major = obj.major;\r\n                //create a reference free copy of the object\r\n            }\r\n        });\r\n        if (!eduExist) {\r\n            newEducations.push(obj);\r\n        }\r\n        setEducations(newEducations);\r\n    };\r\n\r\n    return (\r\n        <div className=\"w-full md:w-1/2 lg:w-1/3 bg-gray-600 border-r-2 border-gray-800 flex flex-col\">\r\n            <Header></Header>\r\n            <form\r\n                className=\"flex flex-col w-full  p-6 pt-16 space-y-2 overflow-y-auto scrollbar-thin scrollbar-thumb-rounded-md scrollbar-thumb-gray-500 scrollbar-track-gray-400\"\r\n                style={{ maxHeight: `calc(100vh - 70px)` }}\r\n            >\r\n                <section className=\"mb-4\">\r\n                    <h1 className=\"text-lg font-semibold text-gray-100 mb-2\">\r\n                        Personal Information\r\n                    </h1>\r\n                    <div className=\"flex flex-col md:flex-row space-y-1 md:space-x-3 md:space-y-0 w-full justify-center  \">\r\n                        <div className=\"w-full\">\r\n                            <label\r\n                                htmlFor=\"firstName\"\r\n                                className=\"text-sm text-gray-100\"\r\n                            >\r\n                                First name:\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"firstName\"\r\n                                placeholder=\"First name\"\r\n                                className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1 justify-center\"\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"w-full\">\r\n                            <label\r\n                                htmlFor=\"lastName\"\r\n                                className=\"text-sm text-gray-100 font-sans\"\r\n                            >\r\n                                Last name:\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"lastName\"\r\n                                placeholder=\"Last name\"\r\n                                className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex flex-col space-y-1 md:flex-row md:space-x-3 md:space-y-0 justify-center\">\r\n                        <div className=\"w-full\">\r\n                            <label\r\n                                htmlFor=\"email\"\r\n                                className=\"text-sm text-gray-100\"\r\n                            >\r\n                                Email:\r\n                            </label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email\"\r\n                                placeholder=\"Email\"\r\n                                className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"w-full\">\r\n                            <label\r\n                                htmlFor=\"phone\"\r\n                                className=\"text-sm text-gray-100\"\r\n                            >\r\n                                Phone number:\r\n                            </label>\r\n                            <input\r\n                                type=\"tel\"\r\n                                id=\"email\"\r\n                                placeholder=\"xxx-xxx-xxxx\"\r\n                                className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                                required\r\n                                maxLength=\"12\"\r\n                                pattern=\"[0-9]{3} [0-9]{3} [0-9]{4}\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex flex-col space-y-1\">\r\n                        <label\r\n                            htmlFor=\"address\"\r\n                            className=\"text-sm text-gray-100 font-sans\"\r\n                        >\r\n                            Address:\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"address\"\r\n                            placeholder=\"Address\"\r\n                            className=\"rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"flex flex-col\">\r\n                        <label\r\n                            htmlFor=\"city\"\r\n                            className=\"text-sm text-gray-100 font-sans\"\r\n                        >\r\n                            City:\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"city\"\r\n                            placeholder=\"City\"\r\n                            className=\"rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"flex flex-col space-y-1 md:flex-row md:space-x-3 md:space-y-0 justify-center\">\r\n                        <div className=\"w-full\">\r\n                            <label\r\n                                htmlFor=\"state\"\r\n                                className=\"text-sm text-gray-100\"\r\n                            >\r\n                                State:\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"state\"\r\n                                placeholder=\"State\"\r\n                                className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"w-full\">\r\n                            <label\r\n                                htmlFor=\"zip\"\r\n                                className=\"text-sm text-gray-100\"\r\n                            >\r\n                                Zip Code:\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"zip\"\r\n                                placeholder=\"zip code\"\r\n                                className=\"w-full rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex flex-col mt-1\">\r\n                        <label\r\n                            htmlFor=\"description\"\r\n                            className=\"text-sm text-gray-100 font-sans\"\r\n                        >\r\n                            Describe your self:\r\n                        </label>\r\n                        <textarea\r\n                            type=\"text\"\r\n                            id=\"description\"\r\n                            placeholder=\"Description\"\r\n                            className=\"rounded-md shadow-sm border-gray-900 bg-gray-800 text-gray-100 mt-1\"\r\n                            required\r\n                            cols=\"30\"\r\n                            rows=\"4\"\r\n                        ></textarea>\r\n                    </div>\r\n                </section>\r\n\r\n                <section className=\"border-t border-gray-400\">\r\n                    <h1 className=\"text-lg font-semibold text-gray-100 mb-2 mt-4\">\r\n                        Work Experience\r\n                    </h1>\r\n\r\n                    {jobs.map((job) => (\r\n                        <Experience\r\n                            id={job.id}\r\n                            handleAdd={increaseJobs}\r\n                            deleteJob={deleteJobs}\r\n                            updateJobs={updateJobs}\r\n                        ></Experience>\r\n                    ))}\r\n                </section>\r\n\r\n                <section className=\"border-t border-gray-400\">\r\n                    <h1 className=\"text-lg font-semibold text-gray-100 mb-2 mt-4\">\r\n                        Education\r\n                    </h1>\r\n                    {educations.map((edu) => (\r\n                        <Education\r\n                            id={edu.id}\r\n                            increaseEducation={increaseEducation}\r\n                            deleteEducation={deleteEducation}\r\n                            updateEducationArr={updateEducation}\r\n                        ></Education>\r\n                    ))}\r\n                </section>\r\n\r\n                <Footer />\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n","import MyDocument from \"./components/MyDocument\";\nimport ReactPDF, { PDFViewer, usePDF } from \"@react-pdf/renderer\";\nimport Form from \"./components/Form\";\n\n\nfunction App() {\n    let myDocument = <MyDocument />;\n    const [instance, update] = usePDF({ myDocument });\n    console.log(instance);\n\n    return (\n        <div className=\"flex\">\n            <Form></Form>\n            <div className=\"hidden md:inline-block flex-auto\">\n                <PDFViewer className=\"w-full h-screen\">\n                    <MyDocument></MyDocument>\n                </PDFViewer>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}